MVC - это тип каркаса системы.
Клиент приходит на сайт. Его запрос перенаправляется на Front Controller
.Суть в том, что там укахываются общие настройки,
подключение файлов, 
устанавливается соединение с БД.

Далее включается Router.Он анализирует запрос и определяет контроллер.
Далее происходит подключение контроллера и передача управление контроллеру.
Контроллер представляет собой класс!!!
Соответственно, действия с данными являются методами этого класса.
actionList()
actionView()
otherMethod()

Роутер просто определяет контроллер и  вызывает метод(ы) контроллера.
Определение контроллера + его методов происходит по заданным программистом дорогам(Routes).Это делается на раннем этапе разработки.
Путь к методу состоит из 2х частей - имя котроллера и имя метода.


После обращения к контроллеру мы можем обратиться к модели или к представлению (model or view).View организует представление страницы в целом для пользователя.


Регулярные выражения preg_match  , preg_replace.
$string ='Ученик сидит за партой';
$pattern = '/Ученик/';
$result = preg_match($pattern, $string);
preg_match(паттерн, строка по которой нужно осуществить поиск); #возвращает бинарное значение 1/0

var_dump($result);

$string = 'Он закончил школу в 2000 году.';
$pattern1 = '/200[0-5]/'; # можно задавать диапазон цифр
$pattern2 = '/200[5,8,9]'; # или 5 или 8 или 9
$pattern3 = '/[0-9] [0-9] [0-9]/'; #от 0-999

Квантификаторы  отвечают за поиск  повторяющиеся символов в строке.
$pattern4= 'p{3,5}'; - от 3х до 5 символов p подряд.
$pattern5= 'p{2,}'; - от 2х и более 
pattern6='/[0-9]+/'; -2 и более цифры подряд



FRONT CONTROLLER. 
<?php
#В начале лучше всего сделать схему
#1.общие настройки
ini_set('display_errors',1); #отображение ошибок
error_reporting(E_ALL);


#2.Подключение файлов системы
define('ROOT',dirname(__FILE__));
require_once(ROOT.'/components/Router.php');

#3.Установка соединения с БД

#4.Вызов Router.
?>

Программировать MVC сложнее чем частные кейсы, конкретные страницы.